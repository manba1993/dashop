"""
Django settings for ddshop11 project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g&@z=+kds9_wjn!$9^6!(4*x@7o-%tz0lr=*$wre1-gkymxiga'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'user',
    'dtoken',
    'goods',
    'carts'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ddshop11.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ddshop11.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dashop11',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

CORS_ORIGIN_ALLOW_ALL = True  # 为True 白名单不启用

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

SHOP_TOKEN_KEY = '123456a'

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            # "PASSWORD":"XXXX"   :redis有密码的添加
        }
    },
    'user_email': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        'OPTIONS': {
            'CLIENT_CLASS':
                'django_redis.client.DefaultClient',
            # "PASSWORD":"XXXX"   :redis有密码的添加
        }
    },
    'goods': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        'OPTIONS': {
            'CLIENT_CLASS':'django_redis.client.DefaultClient',
            #数据存redis之前，会采用zlib算法，进行压缩
            "COMPRESSOR":"django_redis.compressors.zlib.ZlibCompressor"
            # "PASSWORD":"XXXX"   :redis有密码的添加
        }
    },
    'goods_detail': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/3",
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            # 数据存redis之前，会采用zlib算法，进行压缩
            "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor"
            # "PASSWORD":"XXXX"   :redis有密码的添加
        }
    },
    'carts': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/4",
        'TIMEOUT':None,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            # 数据存redis之前，会采用zlib算法，进行压缩
            "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor"
            # "PASSWORD":"XXXX"   :redis有密码的添加
        }
    },

}

#
# from django.core.cache import cache
# 通过cache 可进行相关django cache 命令的操作 如set,get等
# c =caches['user_email']


# 发送邮件设置

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # 固定写法
EMAIL_HOST = 'smtp.qq.com'  # 腾讯QQ邮箱 SMTP 服务器地址
EMAIL_PORT = 25  # SMTP服务的端口号
EMAIL_HOST_USER = '1824687749@qq.com'  # 发送邮件的QQ邮箱
EMAIL_HOST_PASSWORD = 'zvopdqxyccrfgbdd'  # 在QQ邮箱->设置->帐户->“POP3/IMAP......服务” 里得到的在第三方登录QQ邮箱授权码
EMAIL_USE_TLS = False  # 与SMTP服务器通信时，是否启动TLS链接(安全链接)默认falsAPPEND_SLA

APPEND_SLASH = False

WEIBO_CLIENT_ID = '1979184857'
WEIBO_CLIENT_SECRET = 'cea577a0a137762924c5aade62e0aab7'
WEIBO_REDIRECT_URI ='http://127.0.0.1:7000/dadashop/templates/callback.html'
#1.让用户能跳转到 微博授权页  /前段login 页面  点击 微博登录



#上传类的文件/图片  存储路径
MEDIA_ROOT =os.path.join(BASE_DIR,'media')
#标识什么样的请求  为 读取上传文件的请求 ， 该请求不走是凸函数，直接取MEDIA_ROOT路径下寻找文件【需要在主路由中添加新的路由】
MEDIA_URL ='/meida/'

#127.0.0.1:8000/media/  sku/1.jpg
PIC_URL = 'http://127.0.0.1:8000' + MEDIA_URL